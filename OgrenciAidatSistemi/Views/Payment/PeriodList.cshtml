@model IQueryable<PaymentPeriod>
@{
    ViewData["Title"] = "PaymentPeriods";
}

<h2>@ViewData["Title"] <a asp-action="Create" class="btn btn-sm btn-primary float-end">Create New</a></h2>

<form asp-action="List" method="get">
    <div class="row">
        <div class="col-md-6">
            <div class="input-group mb-3">
                <span class="input-group-text">Search:</span>
                <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentSearchString"]" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="input-group mb-3">
                <span class="input-group-text">in</span>
                <select class="form-select" name="searchField">

                    @if (ViewData["CurrentSearchField"] != null)
                    {
                        <option value='@ViewData["CurrentSearchField"]' selected>@ViewData["CurrentSearchField"]</option>
                    }
                    <option value="">All</option>
                    <option value="Id">Period Id</option>
                    <option value="StudentId">Student Id</option>
                    <option value="StartDate">Period Start Date</option>
                    <option value="EndDate">Period End Date</option>
                    <option value="TotalAmount">Total Amount</option>
                </select>
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>

</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="List" asp-route-sortOrder="@(ViewData["IdSortParm"]?.ToString())"
                    asp-route-searchString="@ViewData["CurrentSearchString"]?.ToString()">Period Id</a>

            </th>
            <th>
                <a asp-action="List" asp-route-sortOrder="@(ViewData["StudentIdSortParm"]?.ToString())"
                    asp-route-searchString="@ViewData["CurrentSearchString"]?.ToString()">Student Id</a>
            </th>
            <th>
                <a asp-action="List" asp-route-sortOrder="@(ViewData["StartDateSortParm"]?.ToString())"
                    asp-route-searchString="@ViewData["CurrentSearchString"]?.ToString()">Period Start Date</a>
            </th>
            <th>
                <a asp-action="List" asp-route-sortOrder="@(ViewData["EndDateSortParm"]?.ToString())"
                    asp-route-searchString="@ViewData["CurrentSearchString"]?.ToString()">Period End Date</a>
            </th>
            <th>
                <a asp-action="List" asp-route-sortOrder="@(ViewData["TotalAmountSortParm"]?.ToString())"
                    asp-route-searchString="@ViewData["CurrentSearchString"]?.ToString()">Total Amount</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Student)</td>
                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                <td>@Html.DisplayFor(modelItem => item.TotalAmount)</td>
                <td>
                    <a asp-action="PeriodEdit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="PeriodDetails" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="PeriodDelete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (ViewData["CurrentPageIndex"] != null)
        {
            int currentPageIndex = (int)ViewData["CurrentPageIndex"];
            int totalPages = (int)ViewData["TotalPages"];

            <li class="page-item @(currentPageIndex <= 1 ? "disabled" : "")">
                <a class="page-link" asp-action="List" asp-route-pageIndex="1">First</a>
            </li>
            <li class="page-item @(currentPageIndex <= 1 ? "disabled" : "")">
                <a class="page-link" asp-action="List" asp-route-pageIndex="@(currentPageIndex - 1)">Previous</a>
            </li>

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPageIndex ? "active" : "")">
                    <a class="page-link" asp-action="List" asp-route-pageIndex="@i">@i</a>
                </li>
            }

            <li class="page-item @(currentPageIndex >= totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="List" asp-route-pageIndex="@(currentPageIndex + 1)">Next</a>
            </li>
            <li class="page-item @(currentPageIndex >= totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="List" asp-route-pageIndex="@totalPages">Last</a>
            </li>
        }
    </ul>
</nav>
