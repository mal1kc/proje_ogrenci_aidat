@using OgrenciAidatSistemi.Models.Extensions
@model PaymentView

@{
    ViewData["Title"] = "Payment Details";
    var usrRole = ViewBag.UserRole;
    var isMakePaymentShow = usrRole == UserRole.Student;
    var isIdShow = usrRole == UserRole.SiteAdmin || usrRole == UserRole.SchoolAdmin;
}

<div class="container mt-5">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title p-2">Payment</h5>

            <dl class="row">
                @if (isIdShow)
                {
                    <dt class="col-sm-2 text-nowrap">
                        @Html.DisplayNameFor(model => model.Id)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Id)
                    </dd>
                }
                <dt class="col-sm-2 text-nowrap">
                    @Html.DisplayNameFor(model => model.PaymentDate)
                </dt>

                <dd class="col-sm-10 date">
                    @Html.DisplayFor(model => model.PaymentDate)
    using Bogus.DataSets;
                </dd>

                <dt class="col-sm-2 text-nowrap">
                    @Html.DisplayNameFor(model => model.PaymentMethod)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.PaymentMethod)
                </dd>

                <dt class="col-sm-2 text-nowrap">
                    @Html.DisplayNameFor(model => model.Amount)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Amount)
                </dd>

                <dt class="col-sm-2 text-nowrap">
                    @Html.DisplayNameFor(model => model.Status)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Status)
                </dd>

                @*
                diffrent concrate paymentview classes have different properties, so we need to check if field is exist
                or not
                we will check via for loop
                *@

                @foreach (var field in PaymentMethodSpecificFields.GetFields(Model.PaymentMethod))
                {
                    try
                    {
                        var value = Model.GetType().GetProperty(field)?.GetValue(Model, null);
                        if (value != null)
                        {
                            <dt class="col-sm-2 text-nowrap">
                                @Html.DisplayName(field)
                            </dt>
                            <dd class="col-sm-10">
                                @if (field == "ExpiryDate")
                                {
                                    @if (value != null)
                                    {
                                        // need like that 
                                        // 2024-06-02T22:02:01.8149071Z this is UTC time
                                        <text>@DateTime.Parse(value.ToString()).ToLocalTime().ToString("yyyy-MM-dd")</text>
                                    }
                                }
                                else if (field == "CardNumber")
                                {
                                    // replace all but not last 4 digits with *
                                    var cardNumber = value.ToString();
                                    var last4Digits = cardNumber.Substring(cardNumber.Length - 4);
                                    var masked = new string('*', cardNumber.Length - 4);

                                    <text>@masked@last4Digits</text>
                                    // we will show only last 4 digits

                                }
                                else
                                {
                                    @Html.Display(field)
                                }
                            </dd>
                        }
                        else
                        {
                            <dt class="col-sm-2 text-nowrap">
                                @Html.DisplayName(field)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayName(field) is not exist
                            </dd>

                        }
                    }
                    catch (Exception ex)
                    {
                        <dt class="col-sm-2 text-nowrap">
                            @Html.DisplayName(field)
                        </dt>
                        <dd class="col-sm-10">
                            <partial name="_ErrorPartial" model="ex.Message" />
                        </dd>
                    }
                }



                @if (Model.Student != null)
                {
                    <h4 class="mt-5">Student</h4>
                    <div class="mt-3">
                        <dd class="col-sm-10 text-muted">
                            @Html.DisplayFor(model => model.Student.StudentId)
                        </dd>
                    </div>
                }
                else
                {
                    <dd class="col-sm-10 text-muted">
                        not find any student
                    </dd>
                }

            </dl>

        </div>
    </div>
    @if (isMakePaymentShow && Model.Status == PaymentStatus.Unpaid)
    {
        <p class="mt-5">
            <a asp-action="MakePayment" asp-controller="Payment" asp-route-id="@Model.Id" class="btn btn-primary">Make Payment</a>
        </p>
    }


    <p class="mt-5">
        <a asp-action="List" asp-controller="Payment" class="btn btn-primary">Show All Payments</a>
        <a class="btn btn-secondary" href='javascript:history.go(-1)'>Return to previous page</a>
    </p>
</div>
