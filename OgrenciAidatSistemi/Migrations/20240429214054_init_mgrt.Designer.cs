// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OgrenciAidatSistemi.Data;

#nullable disable

namespace OgrenciAidatSistemi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240429214054_init_mgrt")]
    partial class init_mgrt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("GradeStudent", b =>
                {
                    b.Property<int>("GradesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GradesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GradeStudent");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Addresses")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.FilePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("FilePaths");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentPeriodId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PaymentPeriodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isVerified")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPeriodeId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("StudentId");

                    b.ToTable("Payments");

                    b.HasDiscriminator<string>("PaymentType").HasValue("Payment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.PaymentPeriode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Occurrence")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkYearId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("WorkYearId");

                    b.ToTable("PaymentPeriods");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.WorkYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("WorkYears");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.BankPayment", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.Payment");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Payments", t =>
                        {
                            t.Property("BankName")
                                .HasColumnName("BankPayment_BankName");

                            t.Property("BranchCode")
                                .HasColumnName("BankPayment_BranchCode");
                        });

                    b.HasDiscriminator().HasValue("Bank");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.CashPayment", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.Payment");

                    b.Property<string>("CashierName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptIssuer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Cash");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.CheckPayment", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.Payment");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Check");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.CreditCardPayment", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.Payment");

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Payments", t =>
                        {
                            t.Property("CVC")
                                .HasColumnName("CreditCardPayment_CVC");

                            t.Property("CardHolderName")
                                .HasColumnName("CreditCardPayment_CardHolderName");

                            t.Property("CardNumber")
                                .HasColumnName("CreditCardPayment_CardNumber");

                            t.Property("ExpiryDate")
                                .HasColumnName("CreditCardPayment_ExpiryDate");
                        });

                    b.HasDiscriminator().HasValue("CreditCard");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.DebitCardPayment", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.Payment");

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("DebitCard");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.SchoolAdmin", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.User");

                    b.Property<int>("ContactInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolAdmins");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.SiteAdmin", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.User");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("SiteAdmins");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Student", b =>
                {
                    b.HasBaseType("OgrenciAidatSistemi.Models.User");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GradLevel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGraduated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("GradeStudent", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.Grade", null)
                        .WithMany()
                        .HasForeignKey("GradesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OgrenciAidatSistemi.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.FilePath", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Grade", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.School", "School")
                        .WithMany("Grades")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Payment", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.PaymentPeriode", "PaymentPeriode")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentPeriodeId");

                    b.HasOne("OgrenciAidatSistemi.Models.FilePath", "Receipt")
                        .WithMany()
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OgrenciAidatSistemi.Models.Student", "Student")
                        .WithMany("Payments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("PaymentPeriode");

                    b.Navigation("Receipt");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.PaymentPeriode", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.Student", null)
                        .WithMany("PaymentPeriods")
                        .HasForeignKey("StudentId");

                    b.HasOne("OgrenciAidatSistemi.Models.WorkYear", "WorkYear")
                        .WithMany("PaymentPeriods")
                        .HasForeignKey("WorkYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkYear");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.WorkYear", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.School", "School")
                        .WithMany("WorkYears")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.SchoolAdmin", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OgrenciAidatSistemi.Models.User", null)
                        .WithOne()
                        .HasForeignKey("OgrenciAidatSistemi.Models.SchoolAdmin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OgrenciAidatSistemi.Models.School", "School")
                        .WithMany("SchoolAdmins")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactInfo");

                    b.Navigation("School");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.SiteAdmin", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.User", null)
                        .WithOne()
                        .HasForeignKey("OgrenciAidatSistemi.Models.SiteAdmin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Student", b =>
                {
                    b.HasOne("OgrenciAidatSistemi.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("OgrenciAidatSistemi.Models.User", null)
                        .WithOne()
                        .HasForeignKey("OgrenciAidatSistemi.Models.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OgrenciAidatSistemi.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactInfo");

                    b.Navigation("School");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.PaymentPeriode", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.School", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("SchoolAdmins");

                    b.Navigation("Students");

                    b.Navigation("WorkYears");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.WorkYear", b =>
                {
                    b.Navigation("PaymentPeriods");
                });

            modelBuilder.Entity("OgrenciAidatSistemi.Models.Student", b =>
                {
                    b.Navigation("PaymentPeriods");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
